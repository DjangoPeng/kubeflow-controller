/*
Copyright 2017 The Caicloud KubeFlow Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// This file was automatically generated by informer-gen

package informers

import (
	time "time"

	clientset "github.com/caicloud/kubeflow-clientset/clientset"
	kubeflow "github.com/caicloud/kubeflow-clientset/informers/kubeflow"
	informers "k8s.io/client-go/informers"
)

type sharedInformerFactory struct {
	informers.SharedInformerFactory
}

// NewSharedInformerFactory constructs a new instance of sharedInformerFactory
func NewSharedInformerFactory(client clientset.Interface, defaultResync time.Duration) SharedInformerFactory {
	return &sharedInformerFactory{
		informers.NewSharedInformerFactory(client, defaultResync),
	}
}

// SharedInformerFactory provides shared informers for resources in all known
// API group versions.
type SharedInformerFactory interface {
	informers.SharedInformerFactory

	Kubeflow() kubeflow.Interface
}

func (f *sharedInformerFactory) Kubeflow() kubeflow.Interface {
	return kubeflow.New(f)
}
